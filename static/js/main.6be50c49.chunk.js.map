{"version":3,"sources":["Requests.js","components/Fetch.js","App.js","reportWebVitals.js","index.js"],"names":["userIdGiven","Component","idGiven","titleGiven","bodyGiven","methodGiven","Requests","state","isGetAll","isGet","isPut","isPost","isPatch","isDelete","userId","id","title","body","visible","onFormSubmit","e","preventDefault","fetch","then","response","json","console","log","setState","method","JSON","stringify","headers","onRequestChange","request","target","value","onUserIdChange","onIdChange","onTitleChange","onBodyChange","Form","onSubmit","this","FormGroup","Label","for","sm","Col","Input","type","name","onChange","Button","Table","striped","bordered","hover","size","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6be50c49.chunk.js","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport { Col, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Fetch from './components/Fetch';\r\n\r\nlet userIdGiven = \"\";\r\nlet idGiven = \"\";\r\nlet titleGiven = \"\";\r\nlet bodyGiven = \"\";\r\nlet methodGiven = \"\";\r\n\r\n\r\nclass Requests extends Component {\r\n\r\n    state = {\r\n        isGetAll: false,\r\n        isGet: false,\r\n        isPut: false,\r\n        isPost: false,\r\n        isPatch: false,\r\n        isDelete: false,\r\n        // method: '',\r\n        userId: '',\r\n        id: '',\r\n        title: '',\r\n        body: '',\r\n        visible: false,\r\n    };\r\n\r\n    onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        // <Fetch   method= {this.state.method}\r\n        // userId= {this.state.userId}\r\n        // id= {this.state.id}\r\n        // title= {this.state.title}\r\n        // body= {this.state.body} />\r\n        // console.log(methodGiven);\r\n        // console.log(idGiven);\r\n        // console.log(titleGiven);\r\n        // console.log(bodyGiven);\r\n        // console.log(userIdGiven);\r\n\r\n        if (methodGiven === 'GET') {\r\n            fetch(`https://jsonplaceholder.typicode.com/posts/${idGiven}`)\r\n                .then((response) => response.json())\r\n                .then((json) => {\r\n                    console.log(json.body);\r\n                    this.setState({\r\n                        visible: true,\r\n                        body: json.body,\r\n                        title: json.title,\r\n                        userId: json.userId,\r\n                        id: json.id\r\n                    });\r\n                    console.log(this.state.visible);\r\n                }\r\n                );\r\n        }\r\n        else if (methodGiven === 'POST') {\r\n            fetch('https://jsonplaceholder.typicode.com/posts', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    title: titleGiven,\r\n                    body: bodyGiven,\r\n                    userId: userIdGiven,\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            })\r\n                .then((response) => response.json())\r\n                .then((json) => {\r\n                    console.log(json.body);\r\n                    this.setState({\r\n                        visible: true,\r\n                        body: json.body,\r\n                        title: json.title,\r\n                        userId: json.userId,\r\n                        id: json.id\r\n                    });\r\n                    console.log(this.state.visible);\r\n                });\r\n        }\r\n        else if (methodGiven === 'PUT') {\r\n            fetch(`https://jsonplaceholder.typicode.com/posts/${idGiven}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    id: idGiven,\r\n                    title: titleGiven,\r\n                    body: bodyGiven,\r\n                    userId: userIdGiven,\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            })\r\n                .then((response) => response.json())\r\n                .then((json) => {\r\n                    console.log(json.body);\r\n                    this.setState({\r\n                        visible: true,\r\n                        body: json.body,\r\n                        title: json.title,\r\n                        userId: json.userId,\r\n                        id: json.id\r\n                    });\r\n                    console.log(this.state.visible);\r\n                });\r\n\r\n        }\r\n        else if (methodGiven === 'PATCH') {\r\n            fetch(`https://jsonplaceholder.typicode.com/posts/${idGiven}`, {\r\n                method: 'PATCH',\r\n                body: JSON.stringify({\r\n                    title: titleGiven,\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            })\r\n                .then((response) => response.json())\r\n                .then((json) => {\r\n                    console.log(json.body);\r\n                    this.setState({\r\n                        visible: true,\r\n                        body: json.body,\r\n                        title: json.title,\r\n                        userId: json.userId,\r\n                        id: json.id\r\n                    });\r\n                    console.log(this.state.visible);\r\n                });\r\n        }\r\n        else {\r\n            fetch(`https://jsonplaceholder.typicode.com/posts/${idGiven}`, {\r\n                method: 'DELETE',\r\n            });\r\n            this.setState({\r\n                visible: true,\r\n                body: \"Delete Succesful\",\r\n                title: \"\",\r\n                userId: \"\",\r\n                id: \"\"\r\n            });\r\n        }\r\n    };\r\n\r\n    onRequestChange = (e) => {\r\n        const request = e.target.value;\r\n        if (request === 'GETALL') {\r\n            methodGiven = request;\r\n            this.setState({\r\n                isGetAll: true,\r\n                isGet: false,\r\n                isPut: false,\r\n                isPost: false,\r\n                isPatch: false,\r\n                isDelete: false\r\n            });\r\n            console.log(methodGiven);\r\n        }\r\n        else if (request === 'GET') {\r\n            methodGiven = request;\r\n            this.setState({\r\n                isGet: true,\r\n                isGetAll: false,\r\n                isPut: false,\r\n                isPost: false,\r\n                isPatch: false,\r\n                isDelete: false\r\n            });\r\n            console.log(methodGiven);\r\n        }\r\n        else if (request === 'POST') {\r\n            methodGiven = request;\r\n            this.setState({\r\n                isPost: true,\r\n                isGetAll: false,\r\n                isGet: false,\r\n                isPut: false,\r\n                isPatch: false,\r\n                isDelete: false\r\n            });\r\n            console.log(methodGiven);\r\n        }\r\n        else if (request === 'PUT') {\r\n            methodGiven = request;\r\n            this.setState({\r\n                isPut: true,\r\n                isGetAll: false,\r\n                isGet: false,\r\n                isPost: false,\r\n                isPatch: false,\r\n                isDelete: false\r\n            });\r\n            console.log(methodGiven);\r\n        }\r\n        else if (request === 'PATCH') {\r\n            methodGiven = request;\r\n            this.setState({\r\n                isPatch: true,\r\n                isGetAll: false,\r\n                isGet: false,\r\n                isPut: false,\r\n                isPost: false,\r\n                isDelete: false\r\n            });\r\n            console.log(methodGiven);\r\n        }\r\n        else {\r\n            methodGiven = \"DELETE\";\r\n            this.setState({\r\n                isDelete: true,\r\n                isGetAll: false,\r\n                isGet: false,\r\n                isPut: false,\r\n                isPost: false,\r\n                isPatch: false\r\n            });\r\n            console.log(methodGiven);\r\n        }\r\n    };\r\n    onUserIdChange = (e) => {\r\n        userIdGiven = e.target.value;\r\n        console.log(userIdGiven);\r\n    };\r\n    onIdChange = (e) => {\r\n        idGiven = e.target.value;\r\n        console.log(idGiven);\r\n    };\r\n    onTitleChange = (e) => {\r\n        titleGiven = e.target.value;\r\n        console.log(titleGiven);\r\n    };\r\n    onBodyChange = (e) => {\r\n        bodyGiven = e.target.value;\r\n        console.log(bodyGiven);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                < Form onSubmit={this.onFormSubmit} >\r\n                    <FormGroup>\r\n                        <Label for=\"exampleSelect\" sm={2}>Select Your Request</Label>\r\n                        <Col sm={10}>\r\n                            <Input type=\"select\" name=\"request\" id=\"exampleSelect\" onChange={this.onRequestChange} >\r\n                                <option>SELECT</option>\r\n                                <option>GET</option>\r\n                                <option>POST</option>\r\n                                <option>DELETE</option>\r\n                                <option>PUT</option>\r\n                                <option>PATCH</option>\r\n                            </Input>\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <div>{this.state.isGet ?\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleText\" sm={2}>Id</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"userId\" id=\"exampleText\" onChange={this.onIdChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </div>\r\n                        : null}\r\n                    </div>\r\n\r\n                    <div>{this.state.isPost ?\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleText\" sm={2}>User Id</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"userId\" id=\"exampleText\" onChange={this.onUserIdChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleText\" sm={2}>Label to change</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"title\" id=\"exampleText\" onChange={this.onTitleChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleText\" sm={2}>New Content</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"body\" id=\"exampleText\" onChange={this.onBodyChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                        </div>\r\n                        : null}\r\n                    </div>\r\n\r\n                    <div>{this.state.isPut ?\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleText\" sm={2}>User Id</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"userId\" id=\"exampleText\" onChange={this.onUserIdChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleText\" sm={2}>Id to chaange</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"id\" id=\"exampleText\" onChange={this.onIdChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleText\" sm={2}>Label to change</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"title\" id=\"exampleText\" onChange={this.onTitleChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleText\" sm={2}>New Content</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"body\" id=\"exampleText\" onChange={this.onBodyChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                        </div>\r\n                        : null}\r\n                    </div>\r\n\r\n                    <div>{this.state.isPatch ?\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleText\" sm={2}>User Id</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"userId\" id=\"exampleText\" onChange={this.onUserIdChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            {/* <FormGroup>\r\n                                <Label for=\"exampleText\" sm={2}>Id to change</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"id\" id=\"exampleText\" onChange={this.onIdChange} />\r\n                                </Col>\r\n                            </FormGroup> */}\r\n                            <FormGroup>\r\n                                <Label for=\"exampleText\" sm={2}>Label to change</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"title\" id=\"exampleText\" onChange={this.onTitleChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            {/* <FormGroup>\r\n                                <Label for=\"exampleText\" sm={2}>New Content</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"body\" id=\"exampleText\" onChange={this.onBodyChange} />\r\n                                </Col>\r\n                            </FormGroup> */}\r\n\r\n                        </div>\r\n                        : null}\r\n                    </div>\r\n\r\n                    <div>{this.state.isDelete ?\r\n                        <div>\r\n                            {/* <FormGroup>\r\n                                <Label for=\"exampleText\" sm={2}>User Id</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"userId\" id=\"exampleText\" onChange={this.onUserIdChange} />\r\n                                </Col>\r\n                            </FormGroup> */}\r\n                            <FormGroup>\r\n                                <Label for=\"exampleText\" sm={2}>Id to Delete</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"id\" id=\"exampleText\" onChange={this.onIdChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                        </div>\r\n                        : null}\r\n                    </div>\r\n\r\n                    <Button type=\"submit\">Submit</Button>\r\n                </Form >\r\n\r\n                {this.state.visible ?\r\n\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>USER</th>\r\n                                <th>ID</th>\r\n                                <th>TITLE</th>\r\n                                <th>BODY</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>{this.state.userId}</td>\r\n                                <td>{this.state.id}</td>\r\n                                <td>{this.state.title}</td>\r\n                                <td>{this.state.body}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    // <Card style={{ width: '18rem' }}>\r\n                    //     <Card.Body>\r\n                    //         <Card.Title>{this.state.title}</Card.Title>\r\n                    //         <Card.Text>\r\n                    //             {this.state.body}\r\n                    //          </Card.Text>\r\n                    //     </Card.Body>\r\n                    // </Card>\r\n\r\n                    // {/* <div><p>{this.state.userId}</p>\r\n                    //     <p>{this.state.id}</p>\r\n                    //     <p>{this.state.title}</p>\r\n                    //     <p>{this.state.body}</p></div> */}\r\n\r\n                    : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Requests;","import React, { Component } from 'react';\r\n\r\nclass Fetch extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <p>{this.props.method}</p>\r\n                <p>{this.props.userId}</p>\r\n                <p>{this.props.id}</p>\r\n                <p>{this.props.title}</p>\r\n                <p>{this.props.body}</p> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fetch;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import './App.css';\nimport './Requests';\nimport Requests from './Requests';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Harsh</h1>\n      <Requests />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}